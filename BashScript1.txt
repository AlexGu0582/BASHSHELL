1   Detect whether the files in specified directories on two server are consistency.
#!/bin/bash
#Detect whether the files in specified directories on two server are consistency.
#
dir=/data/web
b_ip=192.168.88.10
#Traverse all the files in the specified directory, then use them as parameters of the MD5sum command. Write the md5 values of all files into the specified file.
find $dir -type f | xargs md5sum > /tmp/md5_a.txt
ssh $b_ip@username "find $dir -type f | xargs md5sum > /tmp/md5_b.txt"
scp $b_ip@username:/tmp/md5_b.txt /tmp

#Use file names as traversal objects for one-to-one comparison.
for f in `awk '{print 2} /tmp/md5_a.txt'`
do 
    #
    #Taking server a as the standard, when the file in server a does not exist in server b, the non-existent result is directly output.
    if grep -qw "$f" /tmp/md5_b.txt
    then 
        md5_a=`grep -w "$f" /tmp/md5_a.txt | awk '{print 1}'`
        md5_b=`grep -w "$f" /tmp/md5_b.txt | awk '{print 1}'`
        #
        #When the file exist in server b, but the md5 values are not same, "the file changed/deleted" is output.
        if [ $md5_a != $md5_b ]
        then 
            echo "$f changed."
        fi
    else 
        echo "$f deleted."
    fi 
done




2     Clear file contents regularly, record file size regular
#!/bin/bash 
#
#Run the script every hours. When the times is 0 or 12, clear the contents of all files in the directory, but do not delete files. 
#At other times, only count the size of each file, one file per line, then output to a file named with time and date.
#
logfile=/tmp/`date +%H-%F`.log 
n=`date +%H`

if [ $n -eq 00 ] || [ $n -eq 12 ]
then
#Through the for loop, use the find command as the traversal condition to traverse all files in the target directory.
    for i in `find /data/log/ -type f`
    do 
        true > $i 
    done 
else 
    for i in `find /data/log/ -type f`
    do 
        du -sh $i >> $logfile
    done
fi
#



3   Check the network card traffic and record it in the log according to the specified format
#!/bin/bash 
#Recorded once a minute, the log format is as follows：
#2019-08-12 20:40
#ens33 input: 1234bps
#ens33 output: 1234bps
#
while :
do 
    logfile=/tmp/`date +%d`.log 
#Redirect the output of the command executed below to the logfile log 
    exec >> $logfile 
    date +“%F %H:%M”
#
#The trafic unit counted by the sar command is kb/s, and the log filel is bps.
sar -n DEV 1 59 | grep Average | grep ens33 | awk '{print $2, "\t", "input:", "\t", $5*1000*8,}'

done 


4   Count the number of digit that appear in each line of the documents, and count the total number of numbers in the entir document.
#!/bin/bash 
#
#Count the number of digit that appear in each line of the documents, and count the total number of numbers in the entir document.
#Use "awk" to output the number of document lines.
n=`wc -l a.txt | awk '{print $1}'`
sum=0
#There may be sapces in each line of the document, so the document content can not be traversed directly.
for i in `seq 1 $n`
do 
    line=`sed -n "$i"p a.txt`
    n_n=`echo $line|sed s'/[^0-9]//'g|wc -L`
    echo $n_n
    sum=$[ $sum + $n_n ]
done 
echo "sum: $sum"








